#플러터 #모바일개발
라우팅 방법. 

1. 메인에서, 각 경로를 라우팅 작업 필요.
예시 코드
class MyAppRouting extends StatelessWidget {
  const MyAppRouting({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: const MyMainScreen(),
      //라우팅 준비물 1,
      routes: {
        '/main': (context) => const MyMainScreen(),
        '/signup': (context) => const MySignUpScreen(),
        '/login': (context) => const MyLoginScreen(),
      },
    );
  }
}

2.
버튼 클릭시, 페이지 이동하기. 
class MyMainScreen extends StatelessWidget {
  const MyMainScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('메인 화면')),
      body: SafeArea(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Center(child: FlutterLogo(size: 100)),
            const SizedBox(height: 20),
            ElevatedButton(
              //라우팅 2번 째 준비물,
              onPressed: () => Navigator.pushNamed(context, '/signup'),
              child: const Text('회원 가입'),
            ),
            OutlinedButton(
              onPressed: () => Navigator.pushNamed(context, '/login'),
              child: const Text('로그인'),
            ),

          ],
        ),
      ),
    );
  }
}


3
부가 옵션 설명.
Navigator.pushNamed(context, '/signup'),


관련 Navigator 메서드들 & 예시
메서드 이름	설명	되돌아가기 가능?	예시
1
pushNamed	새 화면 push (쌓기)	✅ 가능	Navigator.pushNamed(context, "/main");
2
pushReplacementNamed	현재 화면 제거하고 새 화면 push	❌ 불가	Navigator.pushReplacementNamed(context, "/main");
3
pop	현재 화면 pop (뒤로가기)	-	Navigator.pop(context);
4
pushAndRemoveUntil	모든 이전 화면 제거하고 새 화면 push	❌ 전부 제거	Navigator.pushNamedAndRemoveUntil(context, "/main", (route) => false);
5
push	라우트 객체 직접 전달해서 push	✅ 가능	Navigator.push(context, MaterialPageRoute(builder: (_) => MainPage()));
6
popUntil	조건을 만족할 때까지 pop	✅ 조건 만족까지	Navigator.popUntil(context, ModalRoute.withName("/home"));
